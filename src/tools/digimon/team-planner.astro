---
export const prerender = false;
import InputFieldText from "@components/InputFieldText.astro";

export const tool = {
    title: "Digimon Team Planner",
    description: "Build Digimon chains step by step without loops.",
};
---

<section class="max-w-6xl mx-auto space-y-6">
    <!-- Search -->
    <InputFieldText
            id="digimon-search"
            label="Select a Digimon"
            placeholder="Search e.g. Greymon"
    />
    <ul id="digimon-results" class="mt-2 space-y-2 text-neutral-300"></ul>

    <!-- Evolution Chain -->
    <div id="digimon-chain" class="mt-6 p-4 rounded bg-neutral-800"></div>
</section>

<script type="module">
    import { fetchDigimons } from "/src/lib/api/digimon.ts";

    const stageOrder = {
        "Baby": 0,
        "In-Training": 1,
        "Rookie": 2,
        "Champion": 3,
        "Ultimate": 4,
        "Mega": 5,
        "Ultra": 6,
        "Armor": 7,
    };

    const digimons = await fetchDigimons();
    const $search = document.getElementById("digimon-search");
    const $results = document.getElementById("digimon-results");
    const $chain = document.getElementById("digimon-chain");

    let chain = [];

    function portraitFor(d) {
        return d?.portrait
            ? `/portraits/${d.portrait}`
            : "/digimon-portraits/placeholder.png";
    }

    function createSlot(d, { clickable, side, index }) {
        const slot = document.createElement("div");
        slot.className = "flex flex-col items-center gap-1";

        const stage = document.createElement("span");
        stage.className = "text-xs text-neutral-400";
        stage.textContent = d.stage;

        const imgWrapper = document.createElement("div");
        imgWrapper.className = "relative";

        const img = document.createElement("img");
        img.src = portraitFor(d);
        img.alt = d.name;
        img.title = d.name;

        if (clickable) {
            img.className =
                "w-16 h-16 object-contain rounded-lg cursor-pointer hover:ring-2 hover:ring-" +
                (side === "left" ? "blue-400" : "green-400");
            img.addEventListener("click", () => {
                if (side === "left") {
                    chain.unshift(d.id);
                } else {
                    chain.push(d.id);
                }
                renderChain();
            });
        } else {
            const isEnd = index === 0 || index === chain.length - 1;
            img.className =
                "w-16 h-16 object-contain rounded-lg ring-2 ring-yellow-400 " +
                (isEnd ? "cursor-pointer hover:ring-red-400" : "");
            if (isEnd) {
                img.addEventListener("click", () => {
                    chain = chain.filter((id) => id !== d.id);
                    renderChain();
                });
            }
        }

        img.onerror = () => {
            img.src = "/digimon-portraits/placeholder.png";
        };

        // ðŸ”¥ Badge check
        if (d.requirements && d.requirements.length > 0) {
            let badgeType = null;
            let matchedReqs = [];

            if (d.requirements.some((r) => r.includes("personnality is"))) {
                badgeType = "dna";
                matchedReqs = d.requirements.filter((r) => r.includes("personnality is"));
            } else if (d.requirements.some((r) => r.includes("Digi-Egg"))) {
                badgeType = "egg";
                matchedReqs = d.requirements.filter((r) => r.includes("Digi-Egg"));
            }

            if (badgeType) {
                const badgeWrapper = document.createElement("div");
                badgeWrapper.className = "absolute -top-2 -right-2 group";

                const badge = document.createElement("div");
                badge.className =
                    "cursor-pointer w-6 h-6 flex items-center justify-center text-sm font-bold rounded-md bg-neutral-700/80 text-white shadow-sm";
                badge.textContent = badgeType === "dna" ? "ðŸ§¬" : "ðŸ¥š";

                const tooltip = document.createElement("div");
                tooltip.className =
                    "absolute bottom-full right-0 mb-2 w-48 p-2 rounded-md bg-neutral-900/90 text-neutral-200 text-xs shadow-lg opacity-0 scale-95 group-hover:opacity-100 group-hover:scale-100 transition transform z-20 pointer-events-none";

                tooltip.innerHTML = `
      <div class="font-semibold mb-1">${badgeType === "dna" ? "DNA Jogress" : "Armor Evolution"}</div>
      ${matchedReqs.map((r) => `<div>- ${r}</div>`).join("")}
    `;

                badgeWrapper.appendChild(badge);
                badgeWrapper.appendChild(tooltip);
                imgWrapper.appendChild(badgeWrapper);
            }
        }



        imgWrapper.appendChild(img);

        const name = document.createElement("span");
        name.className = "text-xs text-neutral-200 text-center";
        name.textContent = d.name;

        slot.appendChild(stage);
        slot.appendChild(imgWrapper);
        slot.appendChild(name);
        return slot;
    }



    function createArrow(targetDigimon) {
        const wrapper = document.createElement("div");
        wrapper.className = "relative group flex items-center";

        const arrow = document.createElement("div");
        arrow.className =
            "text-neutral-500 text-2xl font-bold select-none cursor-pointer transition transform group-hover:text-violet-400 group-hover:scale-125";
        arrow.innerHTML = "&rarr;";
        wrapper.appendChild(arrow);

        if (targetDigimon && targetDigimon.requirements?.length > 0) {
            const tooltip = document.createElement("div");
            tooltip.className =
                "absolute bottom-full left-1/2 -translate-x-1/2 mb-3 w-56 p-3 rounded-md bg-neutral-900 text-neutral-200 text-sm shadow-lg opacity-0 scale-95 group-hover:opacity-100 group-hover:scale-100 transition transform z-20 pointer-events-none";

            tooltip.innerHTML = `
      <div class="space-y-1">
        ${targetDigimon.requirements.map((r) => `<div>${r}</div>`).join("")}
      </div>
      <div class="absolute top-full left-1/2 -translate-x-1/2 w-3 h-3 bg-neutral-900 rotate-45"></div>
    `;

            wrapper.appendChild(tooltip);
        }

        return wrapper;
    }

    function createColon() {
        const sc = document.createElement("div");
        sc.className = "text-neutral-500 text-xl select-none";
        sc.innerHTML = ":";
        return sc;
    }

    function renderChain() {
        $chain.innerHTML = "";

        if (chain.length === 0) {
            $chain.innerHTML =
                `<p class="text-neutral-400 text-center">No Digimon selected yet</p>`;
            return;
        }

        const wrapper = document.createElement("div");
        wrapper.className = "flex items-center justify-center gap-3";

        const first = digimons[chain[0]];
        const last = digimons[chain[chain.length - 1]];

        // LEFT options
        const leftCol = document.createElement("div");
        leftCol.className = "flex flex-col items-center gap-3";
        if (first.pre_evolutions.length > 0) {
            first.pre_evolutions
                .filter((id) => !chain.includes(id))
                .forEach((id) => {
                    leftCol.appendChild(
                        createSlot(digimons[id], { clickable: true, side: "left" })
                    );
                });
        }

        // CENTER chain
        const centerCol = document.createElement("div");
        centerCol.className = "flex gap-3 items-center";

        // Colon before chain if first has pre-evolutions
        if (first.pre_evolutions.length > 0) {
            centerCol.appendChild(createColon());
        }

        chain.forEach((id, idx) => {
            const d = digimons[id];
            centerCol.appendChild(
                createSlot(d, { clickable: false, index: idx })
            );

            if (idx < chain.length - 1) {
                const nextDigimon = digimons[chain[idx + 1]];
                centerCol.appendChild(createArrow(nextDigimon));
            }
        });

        // Colon after chain if last has evolutions
        if (last.evolutions.length > 0) {
            centerCol.appendChild(createColon());
        }

        // RIGHT options
        const rightCol = document.createElement("div");
        rightCol.className = "flex flex-col items-center gap-3";
        if (last.evolutions.length > 0) {
            last.evolutions
                .filter((id) => !chain.includes(id))
                .forEach((id) => {
                    rightCol.appendChild(
                        createSlot(digimons[id], { clickable: true, side: "right" })
                    );
                });
        }

        if (leftCol.childElementCount > 0) wrapper.appendChild(leftCol);
        wrapper.appendChild(centerCol);
        if (rightCol.childElementCount > 0) wrapper.appendChild(rightCol);

        $chain.appendChild(wrapper);
    }


    function selectDigimon(d) {
        chain = [d.id];
        renderChain();
    }

    $search.addEventListener("input", () => {
        const query = $search.value.toLowerCase();
        $results.innerHTML = "";

        if (!query) {
            $results.innerHTML =
                `<li class="text-neutral-500 italic col-span-full">Start typing to search Digimon...</li>`;
            return;
        }

        const matches = Object.values(digimons)
            .filter((d) => d.name.toLowerCase().includes(query))
            .sort((a, b) => {
                const sa = stageOrder[a.stage] ?? 999;
                const sb = stageOrder[b.stage] ?? 999;
                if (sa !== sb) return sa - sb;
                return a.name.localeCompare(b.name);
            });


        if (matches.length === 0) {
            $results.innerHTML =
                `<li class="text-neutral-500 italic col-span-full">No Digimon found</li>`;
            return;
        }

        $results.className =
            "flex flex-wrap gap-3 justify-center";

        matches.slice(0, 50).forEach((d) => {
            const li = document.createElement("li");
            li.className =
                "flex flex-col items-center gap-1 cursor-pointer hover:bg-neutral-700 rounded p-2 transition";

            const icon = document.createElement("img");
            icon.src = portraitFor(d);
            icon.alt = d.name;
            icon.className = "w-16 h-16 object-contain rounded";
            icon.onerror = () => (icon.src = "/digimon-portraits/placeholder.png");

            const name = document.createElement("span");
            name.className = "text-sm text-neutral-200 text-center";
            name.textContent = d.name;

            const stage = document.createElement("span");
            stage.className = "text-xs text-neutral-400";
            stage.textContent = d.stage;

            li.appendChild(icon);
            li.appendChild(name);
            li.appendChild(stage);

            li.addEventListener("click", () => {
                selectDigimon(d);
                $results.innerHTML = "";
                $search.value = d.name;
                $results.className = ""; // reset back
            });

            $results.appendChild(li);
        });
    });


    renderChain();
</script>
