---
const {
    id,
    label,
    href,
    onClick,
    variant = "primary",
    size = "sm",
    action,
    target = "_self",
} = Astro.props as {
    id?: string;
    label: string;
    href?: string;
    onClick?: string;
    variant?: "primary" | "secondary";
    size?: "sm" | "md" | "lg";
    action?: string;
    target?: string;
};

const variants = {
    primary:
        "bg-violet-500/20 hover:bg-violet-500/30 text-violet-300 border border-violet-500/40",
    secondary:
        "bg-neutral-800 hover:bg-neutral-700 text-neutral-200 border border-neutral-600/40",
};

const sizes = {
    xs: "px-1 py-1 text-xs",
    sm: "px-2 py-1 text-sm",
    md: "px-4 py-2 text-base",
    lg: "px-5 py-2.5 text-lg",
};

const baseClasses = `inline-flex items-center justify-center gap-2 rounded-md transition-all duration-150 cursor-pointer focus-visible:ring-2 focus-visible:ring-violet-500/40 focus-visible:outline-none`;
---

{href ? (
<a
        id={id}
        href={href}
        target={target}
        rel={target === "_blank" ? "noopener noreferrer" : undefined}
        data-action={action}
        class={`${baseClasses} ${variants[variant]} ${sizes[size]}`}
>
    {Astro.slots.has("default") ? <slot /> : label}
</a>
    ) : (
<button
        id={id}
        data-action={action}
        onClick={onClick}
        class={`${baseClasses} ${variants[variant]} ${sizes[size]}`}
>
    {Astro.slots.has("default") ? <slot /> : label}
</button>
    )}
